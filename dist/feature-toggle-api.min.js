"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};exports.default=featuretoggleapi;var parseToFn=function(e){return"boolean"==typeof e?function(){return e}:e};function initVisibilities(){var i=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t={};return Object.keys(i).forEach(function(e){t[e]=parseToFn(i[e])}),t}function featuretoggleapi(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},w={datas:{},listeners:[],visibilities:initVisibilities(e),showLogs:!1,globalScope:{}};function n(e,i){e(i,w.globalScope)}function o(i){w.listeners.forEach(function(e){e(i),global.showLogs&&r.isVisible(i.name,i.variant,i.data)})}var g=function(e){if(w.showLogs)if("undefined"!=typeof window){var i=-1!=e.indexOf("<b>"),t=-1!=e.indexOf("visible"),n=-1!=e.indexOf("hidden"),r=e.replace("visible","%cvisible");if(r=r.replace("hidden","%chidden"),t)console.log(r,"color:green;font-weight:bold;");else if(n)console.log(r,"color:red;font-weight:bold;");else if(i){var l=[r=r.replace("<b>","%c"),"font-weight:bold;"];console.log.apply(null,l)}else console.log(e)}else{var o=e.replace(/<b>/g,"");console.log(o)}},m=function(e,i){return g(i),g(""),e},T=function(e,i,t,n,r){if(null!=e){var l=e({name:t,variant:n,data:r});return"boolean"==typeof l?l:m(!1,"The "+i+" returns "+l+". => Please return true or false. This result (and all non-boolean results) will return false.")}};function V(e,i){var t=e.toLowerCase();return"string"==typeof i&&(t+="#"+i.toLowerCase()),t}function a(e,i,t,n){var r=void 0;return(r={name:e,variant:i,data:t}).key=V(r.name,r.variant),null==n||(r.visibilityFunction=parseToFn(n),r.result=r.visibilityFunction({name:r.name,variant:r.variant,data:r.data,_internalCall:!0,description:"When attaching a function, the result must be calculated internally. You can filter this out with the _internalCall:true -Flag."})),r}var r={name:"feature-toggle-api",setData:function(e,i,t){if(null==e)throw new Error("setData(): The name must of the feature must be defined, but ist undefined");var n=a(e,null!=t?i:void 0,t||i);w.datas[n.key]=n.data,o(n)},on:function(e,l,i){if(-1==["visibilityrule"].indexOf(e.toLowerCase()))throw new Error('Eventtype "'+e.toLowerCase()+'" does not exist. Only "visibilityrule" is valid');w.listeners.push(l),null!=i&&i.ignorePreviousRules||Object.keys(w.visibilities).forEach(function(e){var i,t,n={name:(t=(i=e).split("#"))[0],variant:1<t.length?t[1]:void 0,data:w.datas[i]},r=w.visibilities[e];n.result=r(n.name,n.variant,n.data),l(n)})},showLogs:function(e){w.showLogs=null==e||e},isVisible:function(e,i,t){var n=w.visibilities;if(g('\nCheck Visibility of <b>Feature "'+e+'", variant "'+(null==i?"":i)+'"'+(t?" with data "+JSON.stringify(t):"")+"."),null==e)throw new Error('The attribute "name" is required for tag <feature></feature>. Example: <feature name="aname"></feature>');var r=n._required,l=null!=n._required,o=T(r,"requiredVisibility",e,i,t),a=V(e,i),u=n[a],s=null!=n[a],f=T(u,"visibility function",e,i,t),d=null!=i,b=V(e,null),c=n[b],v=(n[b],T(c,"visibility function (only name)",e,i,t)),y=n._default,h=null!=n._default,p=T(y,"defaultVisibility",e,i,t);if(l){if(l&&!0===o)g("The requiredVisibility rule returns true. This feature will be shown when no other rule rejects it.");else if(l&&!1===o)return m(!1,"The requiredVisibility rule returns false. This feature will be hidden.")}else g("No requiredVisibility rule specified for this feature.");return s?m(f,"The visibility rule returns "+f+". This feature will be "+(f?"visible":"hidden")+"."):(g("No visibility rule found matching name and variant."),d&&"boolean"==typeof v?m(v,"Found a visibility rule for name "+e+" without variants. The rule returns "+v+". => This feature will be "+(v?"visible":"hidden")+"."):(d&&g("No rules found for name "+e+" without variants."),h?m(p,"Found a defaultVisibility rule. The rule returns "+p+". => This feature will be "+(p?"visible":"hidden")+"."):(g("No default rule found."),l?m(!0,"Only the requiredVisibility rule was found. This returned true. => This feature will be visible."):m(!1,"No rules were found. This feature will be hidden."))))},visibility:function(e,i,t,n){var r=function(e,i,t,n){if(null==e)throw new Error("feature.visibility(): 1st parameter name must be defined");if(1==arguments.length)throw new Error("feature.visibility(): 2nd parameter name must be a boolean or function, but is empty");var r=null,l=null,o=null;return null==t&&null==n?o=i:null==n?(r=i,o=t):(r=i,l=t,o=n),{name:e,variant:r,data:l,result:o}}(e,i,t,n),l=a(r.name,r.variant,r.data,r.result);w.visibilities[l.key]=l.visibilityFunction,w.datas[l.key]=l.data,o(l)},requiredVisibility:function(e){if("function"!=typeof e)throw new Error("feature.requiredVisibility(): 1st parameter must be a function, but is "+(void 0===e?"undefined":_typeof(e)));w.visibilities._required=parseToFn(e)},defaultVisibility:function(e){if("function"!=typeof e)throw new Error("feature.defaultVisibility(): 1st parameter must be a function, but is "+(void 0===e?"undefined":_typeof(e)));w.visibilities._default=parseToFn(e)},addPlugin:function(e){n(e,this)}};return function(i){if(void 0!==("undefined"==typeof window?"undefined":_typeof(window))&&(w.globalScope=window),t.plugins){if(!Array.isArray(t.plugins))throw new Error("featuretoggleapi()-constructor: config.plugins must be an array.");t.plugins.forEach(function(e){if("function"!=typeof e)throw new Error("featuretoggleapi()-constructor: config.plugins needs functions as entries, not "+(void 0===e?"undefined":_typeof(e))+".");n(e,i)})}}(r),r}